import java.util.Scanner;
import java.io.File;
import java.io.FileNotFoundException;

class weatherData {
    public static void main(String[] args) {

        // Stores the file name into a variable
        String may = "en_climate_hourly_ON_6158409_05-2020_P1H.csv";
        File mayFile = new File(may);

        try {
            // Creates a scanner for mayFile
            Scanner myScan = new Scanner(mayFile);
            // Gets rid of the first line 
            String data = myScan.nextLine();

            // Variables for Maximum and Minimum Temperatures 
            // Made these numbers huge as then it would 100% work all the time
            Double maxTemp = -1000.0;
            Double minTemp = 1000.0;

            // Variables for the Month
            Double avgMonthTemp = 0.0;
            Double numOfValues = 0.0;

            // Variables for Days
            Double avgDayTemp1 = 0.0;
            Double avgDayTemp2 = 0.0;
            Double avgDayTemp3 = 0.0;
            Double avgDayTemp4 = 0.0;
            Double avgDayTemp5 = 0.0;
            Double avgDayTemp6 = 0.0;
            Double avgDayTemp7 = 0.0;
            Double numOfValues2 = 24.0;

            // Counter for the amount of Days there are 
            Double amountOfDays = 0.0;

            // While the file still has data on it
            while (myScan.hasNext()) {
                // Stores all the data in one line into the "data" variable
                data = myScan.nextLine();
                try {
                    // Seperates the values based on columns (Backward quotes fixes the double quotes in string)
                    String[] values = data.split("\",\"");
                    // This is to split the space for Data/Time on the excel graph
                    String[] dateTime = values[4].split(" ");

                    // Finds all the Temperatures for the Month
                    Double monthTemps = findTemp(data);
                    avgMonthTemp = avgMonthTemp + monthTemps;
                    numOfValues++;
                    // System.out.println("Temperature: " + monthTemps);

                    // Counter for the amount of Days there are 
                    amountOfDays++;

                    // Finds the Temperature Daily
                    avgDayTemp1 = dailyTemperature(dateTime[0], "1", data, avgDayTemp1);
                    avgDayTemp2 = dailyTemperature(dateTime[0], "2", data, avgDayTemp2);
                    avgDayTemp3 = dailyTemperature(dateTime[0], "3", data, avgDayTemp3);
                    avgDayTemp4 = dailyTemperature(dateTime[0], "4", data, avgDayTemp4);
                    avgDayTemp5 = dailyTemperature(dateTime[0], "5", data, avgDayTemp5);
                    avgDayTemp6 = dailyTemperature(dateTime[0], "6", data, avgDayTemp6);
                    avgDayTemp7 = dailyTemperature(dateTime[0], "7", data, avgDayTemp7);

                    // Finds out the Maximum and Minimum temperatures
                    Double temperature = findTemp(data);

                    if (temperature > maxTemp) {
                        maxTemp = temperature;
                    }
                    if (temperature < minTemp) {
                        minTemp = temperature;
                    }
                    
                // Removes the ArrayIndexOutOfBoundsException Error
                } catch (ArrayIndexOutOfBoundsException aioob) {
                    break;
                }
                
            }
            myScan.close();

            // Prints out the Highest and Lowest Temperature
            System.out.println("Max Temp is " + maxTemp + "째C");
            System.out.println("Min Temp is " + minTemp + "째C");

            // Prints out the Monthly Temperatures
            averageTemp(avgMonthTemp, numOfValues, "Month");

            
            // Prints out the Daily Temperatures
            averageTemp(avgDayTemp1, numOfValues2, "Day 1");
            averageTemp(avgDayTemp2, numOfValues2, "Day 2");
            averageTemp(avgDayTemp3, numOfValues2, "Day 3");
            averageTemp(avgDayTemp4, numOfValues2, "Day 4");
            averageTemp(avgDayTemp5, numOfValues2, "Day 5");
            averageTemp(avgDayTemp6, numOfValues2, "Day 6");
            averageTemp(avgDayTemp7, numOfValues2, "Day 7");


        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
        
    }

    // This method finds the temperature and turns it from a String into a Double
    public static Double findTemp(String a) {
        String[] values = a.split("\",\"");
        String stringTemp = values[9];
        Double temp = Double.parseDouble(stringTemp);
        return temp;
    }

    // This method is used to calculate the average Temperature
    public static void averageTemp(double a, double b, String c) {
        // Finds out the average temperature
        Double monthlyTemp = a / b;
        // Rounds the temperature up to the nearest integer
        Double monthlyTempRounded = Math.ceil(monthlyTemp);
        // Prints out the Temperature
        System.out.println("Avg Temp " + "(" + c + ") = " + (monthlyTemp) + "째C (" + monthlyTempRounded + "째C)");
    }

    // This method is used to find the temperature daily 
    public static Double dailyTemperature(String a, String b, String c, Double d) {
        if (a.equals("2020-05-0" + b)) {
            Double temp = findTemp(c);
            
            d = d + temp;
        } 
        return d;
    }

}
