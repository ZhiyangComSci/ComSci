/* 
    pokemon.java
    Author: Zhiyang Chen
    Teacher: Mr Ho
    Date: April 29, 2020
    Assignment: Pokemon Virtual Assignment
*/

import java.util.Scanner; 
import java.util.Random;
import java.util.ArrayList;
import java.util.Arrays;

class pokemon2 {
    public static void main(String[] args) {

        // Imports Scanner
        Scanner myScan = new Scanner(System.in);
        System.out.println("Welcome to Pokemon Battle!");

        // Imports Random
        Random rand = new Random();

        // These are just for spacing (You will be seeing lots of these in my code)
        System.out.println("");
        
        // Asks the user for their Trainer name
        System.out.println("What is your trainer name?");
        System.out.print("==> ");
        String name = myScan.nextLine();
        System.out.println("");

        // Array for the inital 3 pokemon
        String[] pokemon = {"CHARMANDER", "SQUIRTLE", "BULBASAUR"};

        // Varibales for user
        String playerStarter;
        String playerAttacks[];
        int playerHealth2;
        // Health for each pokemon in order (Charmander, Squirtle, Bulbasaur)
        int[] playerHealth = {16, 16, 16};

        // Variables for the Bot
        String botStarter;
        String botAttacks[];
        int botHealth2;
        // Health for each pokemon in order (Charmander, Squirtle, Bulbasaur)
        int[] botHealth = {1, 1, 1};

        // Health bar and attack damage
        String HP = "";
        int attackDamage;

        // Switching pokemon
        String switchChoice;
        String switchChoice2;
        String tempStorage;
        int tempHealth;

        Boolean botSwitch = false;

        // Integrity
        while (true) {
            // Asks the Trainer to choose one of the three Pokemon
            System.out.println(name + ", who will be your starter pokemon?");
            System.out.println("1. " + pokemon[0]);
            System.out.println("2. " + pokemon[1]);
            System.out.println("3. " + pokemon[2]);
            System.out.print("==> ");
            String starterChoice = myScan.nextLine();

            // Sees which Pokemon the trainer choses
            // Charmander
            if (starterChoice.equalsIgnoreCase(pokemon[0])) {
                playerStarter = pokemon[0];
                playerAttacks = new String[]{"Slash", "Dragon Breath", "Fire Spin", "Inferno"};
                playerHealth2 = playerHealth[0];
                break;
            }
            // Squirtle
            else if (starterChoice.equalsIgnoreCase(pokemon[1])) {
                playerStarter = pokemon[1];
                playerAttacks = new String[]{"Tackle", "Bubble", "Water Pulse", "Aqua Tail"};
                playerHealth2 = playerHealth[1];
                break;
            }
            // Bulbasaur
            else if (starterChoice.equalsIgnoreCase(pokemon[2])){
                playerStarter = pokemon[2];
                playerAttacks = new String[]{"Tackle", "Sludge Bomb", "Seed Bomb", "Vine Whip"};
                playerHealth2 = playerHealth[2];
                break;
            }
            // Integrity
            else {
                System.out.println("Invalid choice, please try again");
            }
        }

        // Randomizes which pokemon the Bot is going to choose
        int num = rand.nextInt(3);
        // Charmander
        if (num == 0) {
            botStarter = pokemon[0];
            botAttacks = new String[]{"Slash", "Dragon Breath", "Fire Spin", "Inferno"};
            botHealth2 = botHealth[0];
        }
        // Squirtle
        else if (num == 1) {
            botStarter = pokemon[1];
            botAttacks = new String[]{"Tackle", "Bubble", "Water Pulse", "Aqua Tail"};
            botHealth2 = botHealth[1];
        }
        // Bulbasaur
        else {
            botStarter = pokemon[2];
            botAttacks = new String[]{"Tackle", "Sludge Bomb", "Seed Bomb", "Vine Whip"};
            botHealth2 = botHealth[2];
        }

        // Starts the battle
        System.out.println("");
        System.out.println("Misty has sent out " + botStarter + "!");
        System.out.println("");
 
        // Prints out Misty's Pokemon Health
        for (int i = 0; i < botHealth2; i++) {
            HP = HP + "=";
        }
        System.out.println(botStarter + "\t Lvl 69");
        System.out.println("\t HP [" + HP + "]");







   
/*
        // Detects if Bot has won
        if (playerHealth[0] <= 0 && playerHealth[1] <= 0 && playerHealth[2] <= 0) {
            System.out.println("You failed, Misty has won!");
            break;
        }
        // Detects if User has won
        else if (botHealth[0] <= 0 && botHealth[1] <= 0 && botHealth[2] <= 0) {
            System.out.println("You have won, Misty has been defeated!");
            break;
        }
*/







        while (true) {
        // Detects if Bot has won
        if (playerHealth[0] <= 0 && playerHealth[1] <= 0 && playerHealth[2] <= 0) {
            System.out.println("You failed, Misty has won!");
            break;
        }
        // Detects if User has won
        else if (botHealth[0] <= 0 && botHealth[1] <= 0 && botHealth[2] <= 0) {
            System.out.println("You have won, Misty has been defeated!");
            break;
        }
            // Integrity
            while (true) {
                // Summons your Pokemon
                System.out.println("");
                System.out.println("What will your Pokemon (" + playerStarter + ") do?");
                System.out.println("1. Fight");
                System.out.println("2. Swap Pokemon");
                System.out.print("==> ");

                // Sees if they choose to Fight or Swap Pokemon
                String choice2 = myScan.nextLine();

                // If they Pokemon they are currently using has fainted, it makes it so they can only swap pokemon
                if (playerHealth2 <= 0) {
                    System.out.println(playerStarter + " is unable to fight, select a new pokemon");
                    choice2 = "swap pokemon";
                }

                // If they fight
                if (choice2.equalsIgnoreCase("Fight")) {
                    System.out.println("");
                    System.out.println(name + "'s turn");
                    System.out.println("");
                    
                    // Integrity 
                    while (true) {
                        HP = "";
                        // Detects which pokemon they have chosen previously and prints out the health
                        for (int i = 0; i < playerHealth2; i++) {
                            HP = HP + "=";
                        }
                        System.out.println(playerStarter + "\t Lvl 420");
                        System.out.println("\t HP [" + HP + "]");
                        
                        // Lists out the attacks
                        System.out.println("");
                        System.out.println("1. " + playerAttacks[0]);
                        System.out.println("2. " + playerAttacks[1]);
                        System.out.println("3. " + playerAttacks[2]);
                        System.out.println("4. " + playerAttacks[3]);

                        // Detects what attack they choose
                        System.out.print("==> ");
                        String attackChoice = myScan.nextLine();
                        System.out.println("");

                        // Randomizes every attack (Ranges from 3-6 attack damage)
                        attackDamage = rand.nextInt(4) + 3;
                        
                        if (attackChoice.equalsIgnoreCase(playerAttacks[0])) {
                            System.out.println(playerStarter + " used " + playerAttacks[0] + "!");
                            break;
                        }
                        else if (attackChoice.equalsIgnoreCase(playerAttacks[1])) {
                            System.out.println(playerStarter + " used " + playerAttacks[1] + "!");
                            break;
                        }
                        else if (attackChoice.equalsIgnoreCase(playerAttacks[2])) {
                            System.out.println(playerStarter + " used " + playerAttacks[2] + "!");
                            break;
                        }
                        else if (attackChoice.equalsIgnoreCase(playerAttacks[3])) {
                            System.out.println(playerStarter + " used " + playerAttacks[3] + "!");
                            break;
                        }
                        else {
                            System.out.println("Invalid choice, please try again");
                        }
                    }

                    // Updates the Health variables
                    if (botStarter.equalsIgnoreCase(pokemon[0])) {
                        botHealth[0] = botHealth[0] - attackDamage;
                    }
                    else if (botStarter.equalsIgnoreCase(pokemon[1])) {
                        botHealth[1] = botHealth[1] - attackDamage;
                    }
                    else if (botStarter.equalsIgnoreCase(pokemon[2])) {
                        botHealth[2] = botHealth[2] - attackDamage;
                    }

                    // Displays how much damage the users attack has done
                    botHealth2 = botHealth2 - attackDamage;
                    System.out.println("It did " + attackDamage + " damage!");
                    if (botHealth2 <= 0) {
                        System.out.println("Misty's " + botStarter + " has fainted");
                    }
                    else {
                        System.out.println("Misty's " + botStarter + " only has " + botHealth2 + "HP left.");
                    }
                    break;  
                }

                // If they choose to swap pokemon
                else if (choice2.equalsIgnoreCase("Swap pokemon")) {
                    System.out.println("");
                    System.out.println("EXCHANGE POKEMON");
                    System.out.println("");
                    System.out.println("\t 1. " + pokemon[0] + " HP:" + playerHealth[0]);
                    System.out.println("\t 2. " + pokemon[1] + " HP:" + playerHealth[1]);
                    System.out.println("\t 3. " + pokemon[2] + " HP:" + playerHealth[2]);
                    System.out.println(""); 
                    while (true) {
                        System.out.println("Choose a Pokemon, (-1 to quit)");
                        System.out.print("==> ");
                        switchChoice = myScan.nextLine();
                        switchChoice = switchChoice.toUpperCase();

                        // If they wish to quit
                        if (switchChoice.equals("-1")){
                            break;
                        }
                        // Checks if the Pokemon still has health
                        else if (switchChoice.equalsIgnoreCase(pokemon[0]) && playerHealth[0] <= 0){
                            System.out.println(pokemon[0] + " has fainted, please try another pokemon");
                            System.out.println("");
                        }
                        else if (switchChoice.equalsIgnoreCase(pokemon[1]) && playerHealth[1] <= 0){
                            System.out.println(pokemon[0] + " has fainted, please try another pokemon");
                            System.out.println("");
                        }
                        else if (switchChoice.equalsIgnoreCase(pokemon[2]) && playerHealth[2] <= 0){
                            System.out.println(pokemon[0] + " has fainted, please try another pokemon");
                            System.out.println("");
                        }
                        // Checks that what they type is actually a pokemon
                        else if (!switchChoice.equalsIgnoreCase(pokemon[0]) && !switchChoice.equalsIgnoreCase(pokemon[1]) && !switchChoice.equalsIgnoreCase(pokemon[2])) {
                            System.out.println("Invalid choice, please try again");
                        }
                        // If it meets these requirements, it will break the loop and continue
                        else {
                            break;
                        }              
                    } 
                    // If they wish to quit (Extra code)        
                    if (switchChoice.equals("-1")){ 
                        System.out.println("");
                        System.out.println(name + "'s turn has been skipped!");
                        break;
                    }
                    while (true) {
                        System.out.println("");
                        System.out.println("Choose a Pokemon to exchange with " + switchChoice);
                        System.out.print("==> ");
                        switchChoice2 = myScan.nextLine();               
                        switchChoice2 = switchChoice2.toUpperCase();       

                        // Checks if the Pokemon still has health
                        if (switchChoice2.equalsIgnoreCase(pokemon[0]) && playerHealth[0] <= 0){
                            System.out.println(pokemon[0] + " has fainted, please try another pokemon");
                        }
                        else if (switchChoice2.equalsIgnoreCase(pokemon[1]) && playerHealth[1] <= 0){
                            System.out.println(pokemon[0] + " has fainted, please try another pokemon");
                        }
                        else if (switchChoice2.equalsIgnoreCase(pokemon[2]) && playerHealth[2] <= 0){
                            System.out.println(pokemon[0] + " has fainted, please try another pokemon");
                        }
                        // Checks that what the user is writing is actually a pokemon 
                        else if (!switchChoice2.equalsIgnoreCase(pokemon[0]) && !switchChoice2.equalsIgnoreCase(pokemon[1]) && !switchChoice2.equalsIgnoreCase(pokemon[2])){
                            System.out.println("");
                            System.out.println("Invalid choice, please try again");
                        }
                        // If it meets these requirements, it will break the loop and continue 
                        else {
                            break;
                        }
                    }
                    
                    // Switches Charmander with Squirtle
                    if (switchChoice.equalsIgnoreCase(pokemon[0]) && switchChoice2.equalsIgnoreCase(pokemon[1])) {
                        tempStorage = pokemon[0];
                        pokemon[0] = pokemon[1];
                        pokemon[1] = tempStorage;

                        tempHealth = playerHealth[0];
                        playerHealth[0] = playerHealth[1];
                        playerHealth[1] = tempHealth;

                        playerHealth2 = playerHealth[0];
                        playerAttacks = new String[]{"Tackle", "Bubble", "Water Pulse", "Aqua Tail"};
                    }
                    // Switches Charmander with Bulbasaur
                    else if (switchChoice.equalsIgnoreCase(pokemon[0]) && switchChoice2.equalsIgnoreCase(pokemon[2])) {
                        tempStorage = pokemon[0];
                        pokemon[0] = pokemon[2];
                        pokemon[2] = tempStorage;

                        tempHealth = playerHealth[0];
                        playerHealth[0] = playerHealth[2];
                        playerHealth[2] = tempHealth;

                        playerHealth2 = playerHealth[0];
                        playerAttacks = new String[]{"Tackle", "Sludge Bomb", "Seed Bomb", "Vine Whip"};
                    }
                    // Switches Squirtle with Charmander
                    else if (switchChoice.equalsIgnoreCase(pokemon[1]) && switchChoice2.equalsIgnoreCase(pokemon[0])) {
                        tempStorage = pokemon[1];
                        pokemon[1] = pokemon[0];
                        pokemon[0] = tempStorage;

                        tempHealth = playerHealth[1];
                        playerHealth[1] = playerHealth[0];
                        playerHealth[0] = tempHealth;

                        playerHealth2 = playerHealth[1];
                        playerAttacks = new String[]{"Slash", "Dragon Breath", "Fire Spin", "Inferno"};
                    }
                    // Switches Squirtle with Bulbasaur
                    else if (switchChoice.equalsIgnoreCase(pokemon[1]) && switchChoice2.equalsIgnoreCase(pokemon[2])) {
                        tempStorage = pokemon[1];
                        pokemon[1] = pokemon[2];
                        pokemon[2] = tempStorage;

                        tempHealth = playerHealth[1];
                        playerHealth[1] = playerHealth[2];
                        playerHealth[2] = tempHealth;

                        playerHealth2 = playerHealth[1];
                        playerAttacks = new String[]{"Tackle", "Sludge Bomb", "Seed Bomb", "Vine Whip"};
                    }
                    // Switches Bulbasaur with Charmander
                    else if (switchChoice.equalsIgnoreCase(pokemon[2]) && switchChoice2.equalsIgnoreCase(pokemon[0])) {
                        tempStorage = pokemon[2];
                        pokemon[2] = pokemon[0];
                        pokemon[0] = tempStorage;

                        tempHealth = playerHealth[2];
                        playerHealth[2] = playerHealth[0];
                        playerHealth[0] = tempHealth;

                        playerHealth2 = playerHealth[2];
                        playerAttacks = new String[]{"Slash", "Dragon Breath", "Fire Spin", "Inferno"};
                    }
                    // Switches Bulbasaur with Squirtle
                    else {
                        tempStorage = pokemon[2];
                        pokemon[2] = pokemon[1];
                        pokemon[1] = tempStorage;

                        tempHealth = playerHealth[2];
                        playerHealth[2] = playerHealth[1];
                        playerHealth[1] = tempHealth;

                        playerHealth2 = playerHealth[2];
                        playerAttacks = new String[]{"Tackle", "Bubble", "Water Pulse", "Aqua Tail"};
                    }
                    
                    playerStarter = switchChoice2;
                    System.out.println("");
                    System.out.println(name + " has sent out " + playerStarter);
                    botSwitch = true;

                    // Detects if user has switched pokemon and does the same (Has to have health)
                    while (true) {
                        if (botSwitch = true); {
                            int num2 = rand.nextInt(3);

                            // Charmander
                            if (num2 == 0 && botHealth[0] > 0) {
                                botStarter = pokemon[0];
                                botHealth2 = botHealth[0];
                                botAttacks = new String[]{"Slash", "Dragon Breath", "Fire Spin", "Inferno"};
                                botSwitch = false;
                            }
                            // Squirtle
                            else if (num2 == 1 && botHealth[1] > 0) {
                                botStarter = pokemon[1];
                                botHealth2 = botHealth[1];
                                botAttacks = new String[]{"Tackle", "Bubble", "Water Pulse", "Aqua Tail"};
                                botSwitch = false;
                            }
                            // Bulbasaur
                            else if (num2 == 2 && botHealth[2] > 0){
                                botStarter = pokemon[2];
                                botHealth2 = botHealth[2];
                                botAttacks = new String[]{"Tackle", "Sludge Bomb", "Seed Bomb", "Vine Whip"};
                                botSwitch = false;
                            }
                            // If all the bots pokemon are dead
                            else if (botHealth[0] <= 0 && botHealth[1] <= 0 && botHealth[2] <= 0) {
                                botSwitch = false;
                            }
                            // Finds another pokemon to switch it too
                            else {
                                num2 = rand.nextInt(3);
                            }
                            System.out.println("");
                            System.out.println("Misty has sent out " + botStarter);
                        } 
                        break;
                    }
                }

                // Integrity
                else {
                    System.out.println("Invalid choice, please try again");
                }
            }

            // If Misty's Pokemon still has health
            if (botHealth2 > 0) {
                // Mistys turn
                System.out.println("");
                System.out.println("Misty's Turn");
                System.out.println("");

                // Prints out Misty's pokemons new health
                HP = "";
                for (int i = 0; i < botHealth2; i++) {
                    HP = HP + "=";
                }
                System.out.println(botStarter + "\t Lvl 69");
                System.out.println("\t HP [" + HP + "]");
                System.out.println("");

                // Bot chooses one random attack
                int botChoice = rand.nextInt(4);
                attackDamage = rand.nextInt(4) + 3;

                if (botChoice == 0) {
                    System.out.println(botStarter + " used " + botAttacks[0] + "!");
                }
                else if (botChoice == 1) {
                    System.out.println(botStarter + " used " + botAttacks[1] + "!");
                }
                else if (botChoice == 2) {
                    System.out.println(botStarter + " used " + botAttacks[2] + "!");
                }
                else {
                    System.out.println(botStarter + " used " + botAttacks[3] + "!");
                }

                // Updates the Health variables
                if (playerStarter.equalsIgnoreCase(pokemon[0])) {
                    playerHealth[0] = playerHealth[0] - attackDamage;
                }
                else if (playerStarter.equalsIgnoreCase(pokemon[1])) {
                    playerHealth[1] = playerHealth[1] - attackDamage;
                }
                else if (playerStarter.equalsIgnoreCase(pokemon[2])) {
                    playerHealth[2] = playerHealth[2] - attackDamage;
                }

                // Displays how much damage the bot attack has done
                playerHealth2 = playerHealth2 - attackDamage;
                System.out.println("It did " + attackDamage + " damage!");
                if (playerHealth2 <= 0) {
                    System.out.println(name + "'s " + playerStarter + " has fainted");
                }
                else {
                    System.out.println(name + "'s " + playerStarter + " only has " + playerHealth2 + "HP left.");
                }
            }
            // If it doesn't have health, it switches pokemon
            else {
                while (true) {
                    int num2 = rand.nextInt(3);
                    // Charmander
                    if (num2 == 0 && botHealth[0] > 0) {
                        botStarter = pokemon[0];
                        botHealth2 = botHealth[0];
                        botAttacks = new String[]{"Slash", "Dragon Breath", "Fire Spin", "Inferno"};
                        break;
                    }
                    // Squirtle
                    else if (num2 == 1 && botHealth[1] > 0) {
                        botStarter = pokemon[1];
                        botHealth2 = botHealth[1];
                        botAttacks = new String[]{"Tackle", "Bubble", "Water Pulse", "Aqua Tail"};
                        break;
                    }
                    // Bulbasaur
                    else if (num2 == 2 && botHealth[2] > 0){
                        botStarter = pokemon[2];
                        botHealth2 = botHealth[2];
                        botAttacks = new String[]{"Tackle", "Sludge Bomb", "Seed Bomb", "Vine Whip"};
                        break;
                    }
                    // If all the bots pokemon are dead
                    else if (botHealth[0] <= 0 && botHealth[1] <= 0 && botHealth[2] <= 0) {
                        break;
                    }
                    // Finds another pokemon to switch it too
                    else {
                        num2 = rand.nextInt(3);
                    }
                    System.out.println("");
                    System.out.println("Misty has sent out " + botStarter);
                }
            }
        }
        myScan.close();
    }
}
